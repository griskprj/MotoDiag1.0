"""Initia migrate

Revision ID: 19a2d57893d8
Revises: 
Create Date: 2025-08-22 23:57:15.962205

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '19a2d57893d8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('elements_fluids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('moto_id', sa.Integer(), nullable=False),
    sa.Column('brake_fluid', sa.Boolean(), nullable=True),
    sa.Column('oil_filter', sa.Boolean(), nullable=True),
    sa.Column('air_filter', sa.Boolean(), nullable=True),
    sa.Column('spark_plug', sa.Boolean(), nullable=True),
    sa.Column('drive_maintenance', sa.Boolean(), nullable=True),
    sa.Column('drive_change', sa.Boolean(), nullable=True),
    sa.Column('brake_fluid_date', sa.DateTime(), nullable=True),
    sa.Column('oil_filter_date', sa.DateTime(), nullable=True),
    sa.Column('air_filter_date', sa.DateTime(), nullable=True),
    sa.Column('spark_plug_date', sa.DateTime(), nullable=True),
    sa.Column('drive_maintenance_date', sa.DateTime(), nullable=True),
    sa.Column('drive_change_date', sa.DateTime(), nullable=True),
    sa.Column('brake_fluid_mileage', sa.Integer(), nullable=True),
    sa.Column('oil_filter_mileage', sa.Integer(), nullable=True),
    sa.Column('air_filter_mileage', sa.Integer(), nullable=True),
    sa.Column('spark_plug_mileage', sa.Integer(), nullable=True),
    sa.Column('drive_maintenance_mileage', sa.Integer(), nullable=True),
    sa.Column('drive_change_mileage', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('maintenance_histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('moto_id', sa.Integer(), nullable=False),
    sa.Column('service_type', sa.String(length=50), nullable=False),
    sa.Column('mileage', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('image', sa.LargeBinary(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('motorcycles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('model', sa.String(length=120), nullable=False),
    sa.Column('years_create', sa.Integer(), nullable=False),
    sa.Column('mileage', sa.Integer(), nullable=False),
    sa.Column('last_mileage_update', sa.DateTime(), nullable=True),
    sa.Column('moto_type', sa.String(), nullable=False),
    sa.Column('engine_volume', sa.Integer(), nullable=False),
    sa.Column('drive_type', sa.String(length=20), nullable=False),
    sa.Column('condition', sa.String(length=40), nullable=False),
    sa.Column('image', sa.LargeBinary(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('token', sa.String(length=200), nullable=False),
    sa.Column('token_expiration', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token', name='uq_password_reset_token')
    )
    op.create_table('pending_registrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('verification_token', sa.String(length=32), nullable=False),
    sa.Column('token_expiration', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username'),
    sa.UniqueConstraint('username', name='uq_pending_username')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('first_reg', sa.Integer(), nullable=True),
    sa.Column('join_date', sa.DateTime(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=True),
    sa.Column('confirmation_token', sa.String(length=100), nullable=True),
    sa.Column('confirmation_sent_at', sa.DateTime(), nullable=True),
    sa.Column('image', sa.LargeBinary(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('confirmation_token'),
    sa.UniqueConstraint('confirmation_token', name='uq_user_confirmation_token'),
    sa.UniqueConstraint('email', name='uq_user_email'),
    sa.UniqueConstraint('username', name='uq_user_username')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscriber_id', sa.Integer(), nullable=False),
    sa.Column('subscribed_to_id', sa.Integer(), nullable=False),
    sa.Column('date_subscribed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subscribed_to_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['subscriber_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subscriber_id', 'subscribed_to_id', name='uq_subscription_pair')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscriptions')
    op.drop_table('users')
    op.drop_table('pending_registrations')
    op.drop_table('password_reset_tokens')
    op.drop_table('motorcycles')
    op.drop_table('maintenance_histories')
    op.drop_table('elements_fluids')
    # ### end Alembic commands ###
